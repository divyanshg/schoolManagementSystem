<%- include('../../header') %>
<%- include('../dashHeaders') %>
<%- include('./sidenav') %>

<style>
    th {

        border: 1px solid #e6e6e6;
        padding: 1rem 2rem 1rem 2rem;
    }

    td {
        border: 1px solid #e6e6e6;
        padding: 1rem 2rem 1rem 2rem;
        text-align: center;
    }

    tr:hover {
        background-color: #f9f9f9;
    }
</style>


<div class="main bg-gray-200 p-5 overflow-x-hidden">
    <h1 class="text-xl font-medium">Students</h1>
    <nav class="bg-grey-light p-3 pl-0 text-sm rounded text-gray-600 font-sans w-full">
        <ol class="list-reset flex text-grey-dark">
            <li><a href="#" class="text-blue font-bold">Home</a></li>
            <li><span class="mx-2">></span></li>
            <li><a href="#" class="text-blue font-bold">students</a></li>
            <li><span class="mx-2">></span></li>
            <li><a href="#" class="text-blue font-bold text-orange-500">All students</a></li>
        </ol>
    </nav>
    <p class="data" style="display: none;"><%- JSON.stringify(users) %></p>
    <input type="text" id="searchInput" onkeyup="searchTable()" class="p-2 rounded my-4 float-right w-1/5"
        placeholder="Search using admission number">
    <table align="center" id="table" border="1" class="table-auto w-full bg-white">
    </table>

</div>

<script>
    constructTable(JSON.parse($('.data').html()), '#table')

    function constructTable(list, selector) {
        $(selector).html("")
        // Getting the all column names 
        var cols = Headers(list, selector);

        // Traversing the JSON data 
        for (var i = 0; i < list.length; i++) {
            var row = $('<tr/>');
            for (var colIndex = 0; colIndex < cols.length; colIndex++) {
                var val = list[i][cols[colIndex]];

                // If there is any key, which is matching 
                // with the column name 
                if (val == null) val = "";
                row.append($('<td/>').html(atob(val)));
            }

            // Adding each row to the table 
            $(selector).append(row);
        }

    }

    function Headers(list, selector) {
        var columns = [];
        var header = $('<tr/>');

        for (var i = 0; i < list.length; i++) {
            var row = list[i];

            for (var k in row) {
                if ($.inArray(k, columns) == -1) {
                    columns.push(k);

                    // Creating the header 
                    header.append($('<th/>').html(k));
                }
            }
        }

        // Appending the header to the table 
        $(selector).append(header);
        return columns;
    }

    function searchTable() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("table");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>